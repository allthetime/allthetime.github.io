{"version":3,"sources":["posts sync /^/.//.*/.md$","posts/001.md","posts/002.md","posts/003.md","App.jsx","reportWebVitals.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","empty","App","React","useState","posts","setPosts","currentPost","setCurrentPost","useEffect","a","posts_","i","at_post","filename","substr","md","require","default","fetch","md_r","text","md_t","push","reverse","className","about","basename","path","component","props","postObjects","p","index","commentsEnabled","children","onClick","history","window","DISQUS","reset","reload","config","console","log","this","page","identifier","url","shortname","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iFAAA,IAAIA,EAAM,CACT,WAAY,IACZ,WAAY,IACZ,WAAY,KAIb,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,iCCxBpB,OAAe,cAA0B,gC,iCCAzC,OAAe,cAA0B,gC,iCCAzC,OAAe,cAA0B,gC,qLCoBnCY,EAAe,GAuFNC,MArFf,WAAgB,IAAD,EAEaC,IAAMC,SAASH,GAF5B,mBAENI,EAFM,KAECC,EAFD,OAGyBH,IAAMC,SAAS,MAHxC,mBAGNG,EAHM,KAGOC,EAHP,KA2Eb,OAxCAL,IAAMM,WAlBN,WACE,sBAAC,sCAAAC,EAAA,sDACOC,EAAe,GACVC,EAAE,EAFd,YAEgBA,GAAGC,KAFnB,wBAGaC,EAAW,YAAKF,GAAIG,QAAQ,GAC5BC,EAAKC,OAAQ,YAAWH,EAAZ,QAA2BI,QAJpD,SAK0BC,MAAMH,GALhC,cAKaI,EALb,iBAMkCA,EAAKC,OANvC,QAMaC,EANb,OAOOX,EAAOY,KAAK,CACRP,GAAIM,EACJR,aATX,QAE2BF,IAF3B,uBAYGD,EAAOa,UACPlB,EAASK,GAbZ,2CAAD,KAiBuB,IAyCvB,sBAAKc,UAAU,MAAf,UACI,sBAAMA,UAAU,YAAhB,SAA8BC,MAC9B,cAAC,IAAD,CAAeC,SAAS,IAAxB,SACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,UA1CZ,SAACC,GACb,IAAMC,EAAc1B,EAAMnB,KAAI,SAAC8C,EAAEC,GAC7B,IAAMC,EAAkB3B,GAAeyB,EAAElB,SACzC,OACI,sBAAKW,UAAU,OAAf,UACI,sBAAMA,UAAU,WAAWpC,GAAI2C,EAAElB,SAAjC,SAA4CkB,EAAElB,WAC9C,sBAAKW,UAAU,cAAf,UACI,cAAC,IAAD,CAAeA,UAAU,gBAAgBU,SAAUH,EAAEhB,MAEhDkB,GAAmB,wBAChBE,QAAS,WA1Cd,IAACtB,EA2CQgB,EAAMO,QAAQd,KAAK,IAAIS,EAAElB,UA3CjCA,EA4CqBkB,EAAElB,SA3CrCwB,OAAOC,QAAQD,OAAOC,OAAOC,MAAM,CACrCC,QAAQ,EACRC,OAAQ,WACNC,QAAQC,IAAIC,MACZA,KAAKC,KAAKC,WAAajC,EACvB+B,KAAKC,KAAKE,IAAM,gCAAgClC,KAGpDN,EAAeM,IAgCuB,2BAUpBoB,GAAmB,cAAC,kBAAD,CACfe,UAAW,6BACXP,OACI,CACIM,IAAK,gCAAgChB,EAAElB,SACvCiC,WAAYf,EAAElB,SAAS,KACvBoC,MAAOlB,EAAElB,qBAUvC,OAAO,qBAAKW,UAAU,QAAf,SAAyBM,aChFvBoB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cb4a911c.chunk.js","sourcesContent":["var map = {\n\t\"./001.md\": 141,\n\t\"./002.md\": 142,\n\t\"./003.md\": 143\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 140;","export default __webpack_public_path__ + \"static/media/001.eb2b8d38.md\";","export default __webpack_public_path__ + \"static/media/002.d09fcdfc.md\";","export default __webpack_public_path__ + \"static/media/003.c87f00f0.md\";","import React, { useCallback } from 'react';\nimport './App.css';\nimport { about, at_post } from './data.json'\nimport ReactMarkdown from 'react-markdown'\nimport { DiscussionEmbed } from 'disqus-react';\n\nimport {\n    BrowserRouter,\n    HashRouter,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\ntype postObj = {\n    md: string;\n    filename: string;\n}\ntype posts = postObj[];\n\nconst empty: posts = [];\n\nfunction App() {\n\n  const [posts, setPosts] = React.useState(empty);\n  const [currentPost, setCurrentPost] = React.useState(null);\n\n  const showComments = (filename:string) => {\n      if (window.DISQUS) window.DISQUS.reset({\n        reload: true,\n        config: function () {  \n          console.log(this);\n          this.page.identifier = filename;  \n          this.page.url = \"https://allthetime.github.io/\"+filename;\n        }\n      });           \n      setCurrentPost(filename);\n  }\n\n  function getPosts() {\n    (async ()=> {\n        let posts_:posts = [];\n        for (let i=1;i<=at_post;i++) {\n            const filename = `00${i}`.substr(-3);\n            const md = require(`./posts/${filename}.md`).default;\n            const md_r = await fetch(md);\n            const md_t: string = await md_r.text();\n            posts_.push({\n                md: md_t,\n                filename\n            })\n        }\n        posts_.reverse()\n        setPosts(posts_)\n    })();\n  }\n\n  React.useEffect(getPosts,[])\n\n  const Posts = (props)=>{\n    const postObjects = posts.map((p,index)=>{\n        const commentsEnabled = currentPost == p.filename;\n        return (\n            <div className=\"Post\">\n                <span className=\"fileName\" id={p.filename}>{p.filename}</span>\n                <div className=\"PostWrapper\">\n                    <ReactMarkdown className=\"ReactMarkdown\" children={p.md}/>\n                    {\n                        !commentsEnabled && <button\n                            onClick={()=>{\n                                props.history.push('/'+p.filename)\n                                showComments(p.filename);\n                            }}\n                        >\n                            SHOW COMMENTS\n                        </button>\n                    }\n                    { \n                        commentsEnabled && <DiscussionEmbed\n                            shortname={'https-allthetime-github-io'}\n                            config={\n                                {\n                                    url: \"https://allthetime.github.io/\"+p.filename,\n                                    identifier: p.filename+\"_0\",\n                                    title: p.filename,\n                                }\n                            }\n                        />                \n                    }\n                </div>\n            </div>\n        )\n      })\n\n      return <div className=\"Posts\">{ postObjects }</div>;\n  }\n\n  return (\n    <div className=\"App\">\n        <span className=\"aboutText\">{ about }</span>\n        <BrowserRouter basename='/'>\n            <Route path='/' component={Posts}/>\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}